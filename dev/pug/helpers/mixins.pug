mixin offerSlide(image)
    picture.offer__frame.swiper-slide
        source(media="(min-width: 1680px)" srcset="static/images/content/" +image + "-lg.webp" type="image/webp")
        source(media="(min-width: 1680px)" srcset="static/images/content/" +image + "-lg.jpg")
        source(media="(min-width: 1366px)" srcset="static/images/content/" +image + "-md.webp" type="image/webp")
        source(media="(min-width: 1366px)" srcset="static/images/content/" +image + "-md.jpg")
        source(media="(min-width: 720px)" srcset="static/images/content/" +image + "-tb.webp" type="image/webp")
        source(media="(min-width: 720px)" srcset="static/images/content/" +image + "-tb.jpg")
        source(srcset="static/images/content/" +image + "-mb.webp" type="image/webp")
        img(src="static/images/content/" +image + "-mb.jpg").offer__frame-image
mixin icon(name,mod)
    if(mod)
        svg(class="svg-sprite-icon icon-" + name + ' ' + mod)
            use(xlink:href="static/images/sprite/symbol/sprite.svg#" + name)
    else
        svg(class="svg-sprite-icon icon-" + name)
            use(xlink:href="static/images/sprite/symbol/sprite.svg#" + name)

mixin breadcrumb(levels)
    .breadcrumbs(aria-label="breadcrumb")
        ol.breadcrumbs__list(itemscope itemtype="http://schema.org/BreadcrumbList")
            each level, index in levels
                //- Index is zero based
                - var count = index+1

                li.breadcrumbs__item(itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem")
                    a(href="#{level[1]}" aria-level!=count).breadcrumbs__link
                        span(itemprop="name") #{level[0]}

                        //- Don't show the divider on the last loop
                    if count < levels.length
                        i.breadcrumbs__symbol(aria-hidden="true").breadcrumbs__divider
                    meta(itemprop="position" content!=count)

mixin itemCard(type, link, image, articul, name, originLink, origin, colorLink, color, sugarLink, sugar, volumeLink, volume, price)
    li(class="item " +type)
        // Фото бутылки + добавление в корзину
        .item__body
            // Артикул и кнопка добавления в вишлист
            .item__head
                .item__articul
                    span.item__articul-name Артикул: 
                    span.item__articul-nr=articul
                button(type="button").item__wishlist.js-to-wishlist
            // Фото бутылки
            picture.item__frame
                source(type="image/webp" srcset="static/images/content/" +image +".webp" )
                img(itemprop="image" src="static/images/content/" +image +".png").item__frame-image
            .item__overlay
                .item__overlay-count
                    button(type="button").item__overlay-btn.item__overlay-btn-decrease -
                    input(type="number" name="item-counter" id="item-counter" placeholder="0").item__overlay-input
                    button(type="button").item__overlay-btn.item__overlay-btn-increase +
                button(type="button").item__overlay-cart.js-to-cart В корзину
        // Название, детали и цена
        .item__bottom
            a(href="" +link target="_self").item__name=name
            .item__details
                a(href="" +originLink target="_self").item__details-link=origin + ', '
                a(href="" +colorLink target="_self").item__details-link=color + ', '
                a(href="" +sugarLink target="_self").item__details-link=sugar + ', '
                a(href="" +volumeLink target="_self").item__details-link=volume + ' л'
            .item__checkout
                b.item__price=price + '₽'
                button(type="button").item__buy
mixin priveListItem(description, type)
    li(class="swp__list-item " +type)
        span
        p.swp__list-description=description
